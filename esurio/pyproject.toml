[tool.poetry]
name = "esurio"
version = "0.1.0"
description = "Advanced market intelligence system using sophisticated mathematical frameworks"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
# Core numerical and data processing
numpy = "^1.24.0"
pandas = "^2.0.0"
scipy = "^1.10.0"

# Deep learning frameworks
torch = "^2.0.0"
tensorflow = "^2.12.0"
transformers = "^4.28.0"

# Mathematical frameworks
gudhi = "^3.7.0"  # Topological Data Analysis
networkx = "^3.0"  # Graph computations
statsmodels = "^0.14.0"  # Statistical analysis
scikit-learn = "^1.2.0"  # Machine learning

# Web scraping
scrapy = "^2.8.0"
selenium = "^4.9.0"
beautifulsoup4 = "^4.12.0"
requests = "^2.28.0"

# Natural Language Processing
spacy = "^3.5.0"
nltk = "^3.8.0"
gensim = "^4.3.0"
textblob = "^0.17.0"

# Financial analysis
yfinance = "^0.2.0"
ta-lib = "^0.4.0"
arch = "^5.3.0"  # GARCH models

# Quantum computing
qiskit = "^0.42.0"  # Quantum computing framework
pennylane = "^0.29.0"  # Quantum ML

# Visualization
plotly = "^5.14.0"
matplotlib = "^3.7.0"
seaborn = "^0.12.0"

# Web framework
fastapi = "^0.95.0"
uvicorn = "^0.21.0"

# Database
sqlalchemy = "^2.0.0"
psycopg2-binary = "^2.9.0"
alembic = "^1.10.0"

# Utilities
python-dotenv = "^1.0.0"
pydantic = "^1.10.0"
loguru = "^0.7.0"
tqdm = "^4.65.0"
joblib = "^1.2.0"
pytest = "^7.3.0"
hypothesis = "^6.75.0"

[tool.poetry.group.dev.dependencies]
# Development tools
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.2.0"
pylint = "^2.17.0"
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
jupyter = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=src --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
